NEW 
 1 I2C_OLED 
 2 ' test i2c with OLED display , SSD1306 controller
 3 ' 128x32 pixels 
 4  ' exemple adapted from pico-examples/i2c/oled_i2c
 5 CONST  STP=0, NO_STP=1
10 CONST DEVID=$78
11 ' oled commands set 
12 CONST OLED.PWR=$AE, OLED.ALL.ON=$A4
13 CONST OLED.NORM.INVRT=$A6,OLED.CONTRAST=$81
14 CONST OLED.ADR.MODE=$20, OLED.COL.ADR=$21
16 CONST OLED.PG.ADR=$22, OLED.DISP.START=$40, OLED.SEG.REMAP=$A0
18 CONST OLED.MUX.RATIO=$A8, OLED.COM.DIR=$C0, OLED.DISP.OFST=$D3
20 CONST OLED.COM.PIN.CFG=$DA, OLED.CLK.DIV=$D5, OLED.PRECHARGE=$D9 
22 CONST OLED.VCOM.DESEL=$DB, OLED.CHARG.PUMP=$8D
24 CONST OLED.HORZ.SCROL=$26, OLED.SCROLL=$2E, OLED.ADDR=$3C
26 CONST OLED.WIDTH=128, OLED.HEIGHT=32, OLED.PAG.HEIGHT=8
28 CONST OLED.NUM.PAGE=4, OLED.BUF.LEN=512
29 trace 0
30 BUFFER TBUF,130 
32 DIM CMD,COUNT  

50 I2C.OPEN 400
52 GOSUB OLED.INIT
54 GOSUB OLED.WND
56 GOSUB OLED.CLEAR 
58 GOSUB BLINK.3 
60 GOSUB WAIT.KEY 
62 GOSUB OLED.CLEAR 
64 ? "binary count fill" 
66 LET COUNT=128 
68 FOR I=1 TO 128: POKE TBUF+I,I: NEXT I
70 FOR I=0 TO 3: GOSUB OLED.DATA: NEXT I  
72 GOSUB WAIT.KEY 
74 GOSUB OLED.CLEAR  
78 GOSUB HELLO
80 PAUSE 50 
82 I2C.CLOSE 
84 END  

86 WAIT.KEY 
88 ? "Press a key to continue"
90 LET K=KEY 
92 RETURN 

100 OLED.CMD ' send command 
110 POKE TBUF,$80 
112 POKE TBUF+1,CMD  
116 I2C.WRITE DEVID,2,TBUF,STP   
120 RETURN 

150 ' send data to OLED 
152 OLED.DATA  
154 POKE TBUF,$40
156 I2C.WRITE DEVID,COUNT+1,TBUF,STP 
160 RETURN

200 OLED.INIT ' initialize oled display 
202 ? "Initializing display."
210 LET CMD=OLED.PWR : GOSUB OLED.CMD ' turn off display 
212 LET CMD=OLED.ADR.MODE: GOSUB OLED.CMD ' set memory address mode 
214 LET CMD=0: GOSUB OLED.CMD ' horizontal addressing mode 
216 LET CMD=OLED.DISP.START :GOSUB OLED.CMD ' set display start line 
218 LET CMD=OLED.SEG.REMAP: GOSUB OLED.CMD ' set segment remap 
220 LET CMD=OLED.MUX.RATIO: GOSUB OLED.CMD ' set multiplex ratio 
222 LET CMD=OLED.HEIGHT-1: GOSUB OLED.CMD ' 64-1 
224 LET CMD=OLED.COM.DIR: GOSUB OLED.CMD ' top..bottom 
226 LET CMD=OLED.DISP.OFST: GOSUB OLED.CMD ' display offset 
228 LET CMD=0: GOSUB OLED.CMD ' no offset 
230 LET CMD=OLED.COM.PIN.CFG: GOSUB OLED.CMD 'set common pins config
232 LET CMD=2: GOSUB OLED.CMD ' bits 5,4 = 0 , see ss1306 datasheet  
234 LET CMD=OLED.CLK.DIV: GOSUB OLED.CMD ' display clock divisor 
236 LET CMD=$80: GOSUB OLED.CMD ' div ratio of 1, standard freq 
238 LET CMD=OLED.PRECHARGE: GOSUB OLED.CMD ' pre-charge period 
240 LET CMD=$F1: GOSUB OLED.CMD ' Vcc internally generate on board
242 LET CMD=OLED.VCOM.DESEL: GOSUB OLED.CMD ' VCOMH deselect level 
244 LET CMD=$30: GOSUB OLED.CMD ' 0.83Vcc
246 LET CMD=OLED.CONTRAST: GOSUB OLED.CMD ' set contrast to maximum
248 LET CMD=$FF: GOSUB OLED.CMD ' maximum value 
250 LET CMD=OLED.ALL.ON: GOSUB OLED.CMD ' entire display on 
252 LET CMD=OLED.NORM.INVRT: GOSUB OLED.CMD ' normal display 
254 LET CMD=OLED.CHARG.PUMP: GOSUB OLED.CMD ' set charge pump 
256 LET CMD=$14: GOSUB OLED.CMD ' Vcc internally generated on board.
258 LET CMD=OLED.SCROLL: GOSUB OLED.CMD ' no scroll 
260 LET CMD=OLED.PWR OR 1: GOSUB OLED.CMD ' turn display on 
264 RETURN 

398 ' blink display 
400 BLINK.3 ? "blink display 3 times" 
410 FOR I=1 TO 3 
420 LET CMD=OLED.ALL.ON OR 1: GOSUB OLED.CMD 
430 PAUSE 400  
440 LET CMD=OLED.ALL.ON: GOSUB OLED.CMD    
450 PAUSE 400  
460 NEXT I 
470 RETURN 

498 '  set oled drawing window 
500 OLED.WND
506 LET CMD=OLED.COL.ADR: GOSUB OLED.CMD  ' col 0..127 
508 LET CMD=0: GOSUB OLED.CMD 
510 LET CMD=127: GOSUB OLED.CMD 
512 LET CMD=OLED.PG.ADR: GOSUB OLED.CMD ' page 0..7 
514 LET CMD=0: GOSUB OLED.CMD 
516 LET CMD=3: GOSUB OLED.CMD 
520 RETURN

598  ' clear display   
600 OLED.CLEAR 
604 FOR I=1 TO 128: POKE TBUF+I,0: NEXT I 
606 LET COUNT=128  
608 FOR I=0 TO 3: GOSUB OLED.DATA: NEXT I 
612 RETURN 

800 HELLO ? "say hello"
802 RESTORE 
804 LET COUNT=128 
806 FOR I=2*8 TO I+3*8-1 : POKE TBUF+I, READ: NEXT I 'HEL
808 RESTORE 1004  
810 FOR I=I TO I+3*8-1: POKE TBUF+I, READ: NEXT I 'LO_ 
812 RESTORE 1010
814 GOSUB POKE.CHAR 'W 
816 RESTORE 1006 
818 GOSUB POKE.CHAR 'O
820 RESTORE 1012 
822 GOSUB POKE.CHAR 'R
824 RESTORE 1004 
826 GOSUB POKE.CHAR 'L
828 RESTORE 1014 
830 GOSUB POKE.CHAR 'D 
834 GOSUB OLED.DATA 
836 RETURN 

898 ' copy char font to TBUF 
900 POKE.CHAR 
902 FOR I=I TO I+7: POKE TBUF+I, READ: NEXT I 
904 RETURN 

1000 DATA $7F,$10,$10,$10,$10,$10,$7F,0 ' H
1002 DATA $7F,$49,$49,$49,$49,$49,$49,0 ' E
1004 DATA $7F,$40,$40,$40,$40,$40,$40,0 ' L       
1006 DATA $7E,$41,$41,$41,$41,$41,$7E,0 ' O 
1008 DATA 0,0,0,0,0,0,0,0               ' SPACE 
1010 DATA $7F,$20,$10,$E,$10,$20,$7F,0  ' W  
1012 DATA $7F,$9,$9,$9,$19,$2A,$44,0    ' R
1014 DATA $7F,$41,$41,$41,$41,$41,$3E,0 ' D 
